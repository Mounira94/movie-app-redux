{"version":3,"sources":["Components/Movies.jsx","Components/Search.jsx","Components/Add.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","edit","remove","rating","name","react_default","a","createElement","className","onClick","padEnd","split","map","x","class","Movies","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","moviesList","_React$createElement","Movies_Card","defineProperty","toggleModal","Component","Search","type","placeholder","onChange","searchMovie","i","filterRate","minRate","Add","style","display","show","id","value","hundleChange","editOrSave","addMovie","library","add","faStroopwafel","App","event","setState","search","target","ratingFilter","_this$state","state","movie","modal","openModal","window","confirm","filter","e","_this$state2","toConsumableArray","concat","_this2","Components_Search","Components_Movies","toLowerCase","indexOf","Components_Add","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03f97837.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nconst Card = ({edit, remove,rating, name }) => {\r\n    return (\r\n        <div className=\"movie\">\r\n        <div>\r\n           <b\r\n            onClick={()=>edit(name,rating)} \r\n           className='edit'>edit</b> \r\n           \r\n           \r\n           <b  onClick={()=>remove(name)} className='delete'>delete</b>  \r\n         <div className=\"movie-stars\">{''.padEnd(rating, '*').split('').map(x => {\r\n            return <i class=\"fas fa-star\"></i>\r\n        })} </div></div>\r\n            <b className=\"movie-name\">{name}</b>\r\n        </div>\r\n    )\r\n}\r\nclass Movies extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <main className=\"main\">\r\n                <div className=\"movies-list\">\r\n                    {this.props.moviesList.map(x => {\r\n                        return <Card  name={x.name} rating={x.rating} \r\n                         edit={this.props.edit}\r\n                          remove={this.props.remove} rating={x.rating} name={x.name} />\r\n                    })}\r\n                    <div onClick={this.props.toggleModal} className=\"movie\">\r\n                        <i class=\"fas fa-plus\" ></i>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\nexport default Movies;","import React, { Component } from 'react';\r\nimport Movies from './Movies';\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <input type=\"text\" placeholder=\"Type movie name to search\" onChange={this.props.searchMovie} className=\"search-text\" />\r\n                <div className=\"rating\">\r\n                    <p className=\"rating-text\">Minimuim rating</p>\r\n                    <div className=\"rating-stars\" >\r\n                       { '******'.split('').map((x,i)=><i onClick={()=>this.props.filterRate(i)} className={this.props.minRate<i?'far fa-star':\"fas fa-star yellow\" } ></i>\r\n                    )  }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Search;","import React, { Component } from 'react';\r\nclass Add extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{display:this.props.show ? \"block\" : \"none\"}} className=\"form-add\" >\r\n            <div className=\"form\">\r\n                <input id=\"name\" value={this.props.name} className=\"form-input\" onChange={this.props.hundleChange} type=\"text\" placeholder=\"Movie name\" />\r\n                <input id=\"rating\" value={this.props.rating} className=\"form-input\" onChange={this.props.hundleChange} type=\"text\" placeholder=\"Movie rating\" />\r\n                    <button className=\"btn\" onClick={ this.props.editOrSave=='edit'?this.props.edit: this.props.addMovie}>{this.props.editOrSave}</button>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Add;","import React, { Component } from 'react';\nimport Movies from './Components/Movies';\nimport Search from './Components/Search';\nimport Add from './Components/Add'\nimport './App.css';\nimport { createStore } from 'redux'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faStroopwafel);\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movie: [{ name: 'Les quatre cents coups 1959', rating: 6 },\n      { name: 'La haine 1995', rating: 5 },\n      { name: 'Le parrain 1972', rating: 4 },\n      { name: 'C`est arrivé près de chez vous 1992', rating: 3 },\n      { name: 'Apprendre à aimer 2018', rating: 1 },\n      ],\n      search: '',\n      minRate: 0,\n      modal: false,\n      name: '',\n      rating: 0,\n      editOrSave: 'save'\n    }\n  }\n  searchMovie = (event) => {\n    this.setState({ search: event.target.value })\n  }\n\n  ratingFilter = (minRate) => {\n\n    this.setState({\n      minRate,\n    })\n\n\n  }\n\n  edit = () => {\n\n    let { name, rating } = this.state\n\n    this.setState({\n      movie: this.state.movie.map(x => {\n        if (x.name === name) {\n          return { name, rating }\n        }\n        return x\n      })\n      ,\n      modal: !this.state.modal,\n      editOrSave:'save',\n      name:'',\n      rating:''\n    })\n\n  }\n  openModal = (name, rating) => {\n\n\n    this.setState({\n      name,\n      rating,\n      modal: !this.state.modal,\n      editOrSave: 'edit'\n    })\n  }\n\n\n\n  remove = (name) => {\n    if (window.confirm('do you delete this one ?')) {\n      this.setState({\n        movie: this.state.movie.filter(x => x.name != name)\n      })\n    }\n  }\n\n\n\n\n\n  toggleModal = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  hundleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  addMovie = () => {\n    let { name, rating } = this.state;\n    this.setState({\n      movie: [...this.state.movie, { name, rating }]\n    });\n    this.toggleModal();\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Search minRate={this.state.minRate}\n         filterRate={this.ratingFilter} searchMovie={this.searchMovie} />\n        <Movies\n         edit={this.openModal}\n          remove={this.remove}\n           moviesList={this.state.movie.filter(x => x.name.toLowerCase().indexOf(this.state.search.toLowerCase()) != -1 && this.state.minRate < x.rating)}\n          toggleModal={this.toggleModal} />\n        <Add \n        edit={this.edit} \n        editOrSave={this.state.editOrSave}\n         show={this.state.modal}\n         name={this.state.name}\n         rating={this.state.rating}\n          hundleChange={this.hundleChange}\n          addMovie={this.addMovie} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}